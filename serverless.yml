# serverless.yml
service: candidate-portal
app: candidate-portal
	
frameworkVersion: ">=2.5.0 <3.0.0"
 
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  memorySize: 128
  endpointType: PRIVATE
  timeout: 30
  vpcEndpointIds:
    - ${ssm:/${self:stage}/vpce_endpoint_execute_api~true}
  resourcePolicy:
    - Effect: Deny
      Principal: '*'
      Action: execute-api:Invoke
      Resource: "arn:aws:execute-api:${self:provider.region}:${env:ACCOUNT_ID}:*/${self:provider.stage}/*"
      Condition:
        StringNotEquals:
          aws:SourceVpc:
            - ${ssm:/${self:stage}/vpc_id~true}
  environment:
    CANDIDATE_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    CANDIDATE_EMAIL_TABLE: "candidate-email-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.CANDIDATE_TABLE}


functions:
  candidateWelcome:
    handler: api/candidate.welcome
    events:
      - http:
          path: candidates/welcome
          method: get

  candidateSubmission:
    handler: api/candidate.submit
    memorySize: 128
    description: Submit candidate information and starts interview process.
    events:
      - http: 
          path: candidates
          method: post

  listCandidates:
    handler: api/candidate.list
    memorySize: 128
    description: List all candidates
    events:
      - http: 
          path: candidates
          method: get

  candidateDetails:
    handler: api/candidate.get
    events:
      - http:
          path: candidates/{id}
          method: get
